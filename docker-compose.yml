services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: backend
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      PORT: 8080
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
      POSTGRES_DB: ride_app
      POSTGRES_HOST: postgres
    restart: unless-stopped
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: frontend
    environment:
      VITE_GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - 80:3000
  postgres:
    image: postgres:latest
    container_name: postgres_database
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ride_app
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U root -d ride_app']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: unless-stopped
volumes:
  postgres-data:
